-- Fluent UI Library by: CursedZed
-- Versão: 2.1 - Com Drag no Ícone
-- Corrigido: TweenService + Movimento do Ícone

local FluentLibrary = {}
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")

-- Configurações
FluentLibrary.Settings = {
    DefaultPosition = UDim2.new(0.02, 0, 0.8, 0),
    IconSize = UDim2.new(0, 50, 0, 50),
    AnimationSpeed = 0.3,
    ThemeColors = {
        Dark = {
            Primary = Color3.fromRGB(30, 30, 35),
            Secondary = Color3.fromRGB(45, 45, 50),
            Accent = Color3.fromRGB(0, 120, 215),
            Text = Color3.fromRGB(240, 240, 240),
            Hover = Color3.fromRGB(60, 60, 65)
        }
    }
}

FluentLibrary.CurrentTheme = "Dark"
FluentLibrary.Visible = false
FluentLibrary.Windows = {}

-- Função Tween corrigida
function FluentLibrary:Tween(object, properties, duration)
    local tweenInfo = TweenInfo.new(
        duration or self.Settings.AnimationSpeed, 
        Enum.EasingStyle.Quad, 
        Enum.EasingDirection.Out
    )
    local tween = TweenService:Create(object, tweenInfo, properties)
    tween:Play()
    return tween
end

-- Criar ícone flutuante com drag
function FluentLibrary:CreateFloatingIcon()
    local iconGui = Instance.new("ScreenGui")
    iconGui.Name = "FluentIcon"
    iconGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
    iconGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

    local iconButton = Instance.new("ImageButton")
    iconButton.Name = "FloatingIcon"
    iconButton.Size = self.Settings.IconSize
    iconButton.Position = self.Settings.DefaultPosition
    iconButton.AnchorPoint = Vector2.new(0, 0.5)
    iconButton.BackgroundColor3 = self.Settings.ThemeColors[self.CurrentTheme].Accent
    iconButton.Image = "rbxassetid://10734948210"
    iconButton.ScaleType = Enum.ScaleType.Fit
    iconButton.BorderSizePixel = 0
    iconButton.Parent = iconGui

    local iconCorner = Instance.new("UICorner")
    iconCorner.CornerRadius = UDim.new(0, 12)
    iconCorner.Parent = iconButton

    -- Sistema de Drag para o ícone
    local dragging = false
    local dragInput, dragStart, startPos

    local function update(input)
        local delta = input.Position - dragStart
        iconButton.Position = UDim2.new(
            startPos.X.Scale, 
            startPos.X.Offset + delta.X,
            startPos.Y.Scale, 
            startPos.Y.Offset + delta.Y
        )
    end

    iconButton.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            dragStart = input.Position
            startPos = iconButton.Position
            
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)

    iconButton.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement then
            dragInput = input
        end
    end)

    UserInputService.InputChanged:Connect(function(input)
        if dragging and input == dragInput then
            update(input)
        end
    end)

    -- Animação de hover
    iconButton.MouseEnter:Connect(function()
        self:Tween(iconButton, {Size = self.Settings.IconSize + UDim2.new(0, 5, 0, 5)})
    end)

    iconButton.MouseLeave:Connect(function()
        self:Tween(iconButton, {Size = self.Settings.IconSize})
    end)

    return iconButton, iconGui
end

-- Criar janela principal (função corrigida)
function FluentLibrary:CreateWindow(name)
    local window = {}
    window.Name = name

    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = name .. "Window"
    screenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
    screenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

    local mainFrame = Instance.new("Frame")
    mainFrame.Name = "MainFrame"
    mainFrame.Size = UDim2.new(0, 400, 0, 450)
    mainFrame.Position = UDim2.new(0.8, -350, 0.5, -175)
    mainFrame.BackgroundColor3 = self.Settings.ThemeColors[self.CurrentTheme].Primary
    mainFrame.BorderSizePixel = 0
    mainFrame.ClipsDescendants = true
    mainFrame.Visible = false
    mainFrame.Parent = screenGui

    -- Header
    local header = Instance.new("Frame")
    header.Name = "Header"
    header.Size = UDim2.new(1, 0, 0, 40)
    header.BackgroundColor3 = self.Settings.ThemeColors[self.CurrentTheme].Secondary
    header.BorderSizePixel = 0
    header.Parent = mainFrame

    local title = Instance.new("TextLabel")
    title.Name = "Title"
    title.Size = UDim2.new(1, -50, 1, 0)
    title.Position = UDim2.new(0, 15, 0, 0)
    title.BackgroundTransparency = 1
    title.Text = name
    title.TextColor3 = self.Settings.ThemeColors[self.CurrentTheme].Text
    title.TextXAlignment = Enum.TextXAlignment.Left
    title.Font = Enum.Font.GothamSemibold
    title.TextSize = 16
    title.Parent = header

    local closeButton = Instance.new("ImageButton")
    closeButton.Name = "CloseButton"
    closeButton.Size = UDim2.new(0, 30, 0, 30)
    closeButton.Position = UDim2.new(1, -35, 0.5, -15)
    closeButton.AnchorPoint = Vector2.new(1, 0.5)
    closeButton.BackgroundTransparency = 1
    closeButton.Image = "rbxassetid://10734947760"
    closeButton.ImageColor3 = self.Settings.ThemeColors[self.CurrentTheme].Text
    closeButton.Parent = header

    -- Tabs
    local tabContainer = Instance.new("Frame")
    tabContainer.Name = "TabContainer"
    tabContainer.Size = UDim2.new(1, -20, 0, 35)
    tabContainer.Position = UDim2.new(0, 10, 0, 45)
    tabContainer.BackgroundTransparency = 1
    tabContainer.Parent = mainFrame

    -- Content
    local contentContainer = Instance.new("Frame")
    contentContainer.Name = "ContentContainer"
    contentContainer.Size = UDim2.new(1, -20, 1, -90)
    contentContainer.Position = UDim2.new(0, 10, 0, 85)
    contentContainer.BackgroundTransparency = 1
    contentContainer.Parent = mainFrame

    window.Gui = screenGui
    window.MainFrame = mainFrame
    window.TabContainer = tabContainer
    window.ContentContainer = contentContainer
    window.Tabs = {}
    window.ActiveTab = nil

    -- Função Toggle CORRIGIDA
    function window:Toggle()
        self.MainFrame.Visible = not self.MainFrame.Visible
        if self.MainFrame.Visible then
            self.MainFrame.Size = UDim2.new(0, 0, 0, 0)
            FluentLibrary:Tween(self.MainFrame, {Size = UDim2.new(0, 400, 0, 450)})
        else
            FluentLibrary:Tween(self.MainFrame, {Size = UDim2.new(0, 0, 0, 0)})
        end
    end

    closeButton.MouseButton1Click:Connect(function()
        window:Toggle()
    end)

    table.insert(self.Windows, window)
    return window
end

-- Função para criar dropdown com search (simplificada)
function FluentLibrary:CreateSearchDropdown(options, parent)
    local dropdownFrame = Instance.new("Frame")
    dropdownFrame.Name = "SearchDropdown"
    dropdownFrame.Size = UDim2.new(1, 0, 0, 35)
    dropdownFrame.BackgroundColor3 = self.Settings.ThemeColors[self.CurrentTheme].Secondary
    dropdownFrame.BorderSizePixel = 0
    dropdownFrame.Parent = parent

    local searchBox = Instance.new("TextBox")
    searchBox.Name = "SearchBox"
    searchBox.Size = UDim2.new(1, -40, 1, 0)
    searchBox.Position = UDim2.new(0, 10, 0, 0)
    searchBox.BackgroundTransparency = 1
    searchBox.PlaceholderText = "Pesquisar..."
    searchBox.Text = ""
    searchBox.TextColor3 = self.Settings.ThemeColors[self.CurrentTheme].Text
    searchBox.Font = Enum.Font.Gotham
    searchBox.TextSize = 12
    searchBox.TextXAlignment = Enum.TextXAlignment.Left
    searchBox.Parent = dropdownFrame

    return dropdownFrame
end

-- Função para criar tab
function FluentLibrary:CreateTab(window, name)
    local tabButton = Instance.new("TextButton")
    tabButton.Name = "TabButton_" .. name
    tabButton.Size = UDim2.new(0, 80, 1, 0)
    tabButton.BackgroundColor3 = self.Settings.ThemeColors[self.CurrentTheme].Secondary
    tabButton.BorderSizePixel = 0
    tabButton.Text = name
    tabButton.TextColor3 = self.Settings.ThemeColors[self.CurrentTheme].Text
    tabButton.Font = Enum.Font.Gotham
    tabButton.TextSize = 12
    tabButton.Parent = window.TabContainer

    local tabContent = Instance.new("ScrollingFrame")
    tabContent.Name = "TabContent_" .. name
    tabContent.Size = UDim2.new(1, 0, 1, 0)
    tabContent.Position = UDim2.new(0, 0, 0, 0)
    tabContent.BackgroundTransparency = 1
    tabContent.BorderSizePixel = 0
    tabContent.ScrollBarThickness = 5
    tabContent.Visible = false
    tabContent.AutomaticCanvasSize = Enum.AutomaticSize.Y
    tabContent.Parent = window.ContentContainer

    tabButton.MouseButton1Click:Connect(function()
        if window.ActiveTab then
            window.ActiveTab.Visible = false
        end
        tabContent.Visible = true
        window.ActiveTab = tabContent
    end)

    local tab = {}
    tab.Content = tabContent

    function tab:AddButton(name, callback)
        local button = Instance.new("TextButton")
        button.Name = "Button_" .. name
        button.Size = UDim2.new(1, 0, 0, 35)
        button.BackgroundColor3 = FluentLibrary.Settings.ThemeColors[FluentLibrary.CurrentTheme].Accent
        button.BorderSizePixel = 0
        button.Text = name
        button.TextColor3 = Color3.fromRGB(255, 255, 255)
        button.Font = Enum.Font.GothamSemibold
        button.TextSize = 13
        button.Parent = tabContent

        button.MouseButton1Click:Connect(callback)
        return button
    end

    function tab:AddDropdown(name, options, callback)
        local dropdownContainer = Instance.new("Frame")
        dropdownContainer.Name = "DropdownContainer_" .. name
        dropdownContainer.Size = UDim2.new(1, 0, 0, 35)
        dropdownContainer.BackgroundTransparency = 1
        dropdownContainer.Parent = tabContent

        local dropdownLabel = Instance.new("TextLabel")
        dropdownLabel.Name = "DropdownLabel"
        dropdownLabel.Size = UDim2.new(0.5, 0, 1, 0)
        dropdownLabel.BackgroundTransparency = 1
        dropdownLabel.Text = name
        dropdownLabel.TextColor3 = FluentLibrary.Settings.ThemeColors[FluentLibrary.CurrentTheme].Text
        dropdownLabel.TextXAlignment = Enum.TextXAlignment.Left
        dropdownLabel.Font = Enum.Font.Gotham
        dropdownLabel.TextSize = 12
        dropdownLabel.Parent = dropdownContainer

        local dropdown = FluentLibrary:CreateSearchDropdown(options, dropdownContainer)
        return dropdown
    end

    window.Tabs[name] = tab
    return tab
end

return FluentLibrary
